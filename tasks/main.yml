---
- name: Check if v2ray is already installed
  stat:
    path: /usr/bin/v2ray/v2ray
  register: v2ray_executable

- name: Install Red Hat system specific packages
  include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat' and (not v2ray_executable.stat.exists|d(False))

- name: Install Debian system specific packages
  include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian' and (not v2ray_executable.stat.exists|d(False))

- name: Install Arch Linux system specific packages
  include_tasks: setup-Archlinux.yml
  when: ansible_os_family == 'Archlinux' and (not v2ray_executable.stat.exists|d(False))

- name: Install v2ray using official setup script
  become: true
  shell: |
    set -o pipefail
    curl -Ls https://install.direct/go.sh | sudo bash
  args:
    executable: /bin/bash
    creates: /usr/bin/v2ray/v2ray
    warn: no
  notify:
  - start v2ray
  - enable v2ray

- name: Check, update config.json and restart v2ray
  become: true
  block:
  - name: Check if config.json exists
    stat:
      path: /etc/v2ray/config.json
    register: config_json
  - name: Back up config.json
    copy:
      src: /etc/v2ray/config.json
      dest: /etc/v2ray/config.json.backup
      remote_src: yes
    when: config_json.stat.exists|d(False)
  - name: Update config.json
    template:
      src: "{{ v2ray_config_json_path | default('config.j2') }}"
      dest: /etc/v2ray/config.json
      owner: root
      group: root
      mode: '0644'
  - name: Check config.json syntax
    command: /usr/bin/v2ray/v2ray -test -config=/etc/v2ray/config.json
    register: result
    failed_when: not (result.rc == 0)
  - name: Restart v2ray service
    command: /bin/true
    notify:
    - restart v2ray
  - name: Clean up backup
    file:
      path: /etc/v2ray/config.json.backup
      state: absent
    when: config_json.stat.exists|d(False)
  rescue:
  - debug:
      msg: 'Invalid config.json detected. Please check and try again.'
  - name: Check if config.json.backup exists
    stat:
      path: /etc/v2ray/config.json.backup
    register: config_json_backup
  - name: Backup does not exist
    command: /bin/false
    when: not config_json_backup.stat.exists|d(False)
  - name: Restore config.json
    copy:
      src: /etc/v2ray/config.json.backup
      dest: /etc/v2ray/config.json
      remote_src: yes
  - name: Restart v2ray service
    command: /bin/true
    notify:
    - restart v2ray
  - name: Clean up backup
    file:
      path: /etc/v2ray/config.json.backup
      state: absent
  when: update_v2ray_config_json
